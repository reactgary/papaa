/**
 * Document: Dataflow Programming with Maxeler (pappa16.pdf)
 * Exercise 4      Name: Max-pooling layer
 * MaxFile name: Exercise4
 * Summary:
 *      CPU code for a kernel design of Max-pooling layer.
 */

package maxpooling;

import com.maxeler.maxcompiler.v2.build.EngineParameters;
import com.maxeler.maxcompiler.v2.managers.engine_interfaces.CPUTypes;
import com.maxeler.maxcompiler.v2.managers.engine_interfaces.EngineInterface;
import com.maxeler.maxcompiler.v2.managers.engine_interfaces.InterfaceParam;
import com.maxeler.maxcompiler.v2.managers.standard.Manager;
import com.maxeler.maxcompiler.v2.managers.standard.Manager.IOType;

public class MaxpoolingManager {

	private static int height = 8;

	public static void main(String[] args) {
		Manager m = new Manager(new EngineParameters(args));
		m.setKernel(new MaxpoolingKernel( m.makeKernelParameters(), height));
		m.setIO(IOType.ALL_CPU);
		m.createSLiCinterface(interfaceDefault());
		m.build();
	}

	private static EngineInterface interfaceDefault() {
		EngineInterface ei = new EngineInterface();

		InterfaceParam size = ei.addParam("size", CPUTypes.INT32);

		CPUTypes streamType = CPUTypes.UINT32;
		InterfaceParam sizeBytes= size * streamType.sizeInBytes();

		ei.setTicks("MaxpoolingKernel", size);
		ei.setStream("inStream", streamType, sizeBytes);
		ei.setStream("outStream", streamType, sizeBytes/4);
		return ei;
	}

}
